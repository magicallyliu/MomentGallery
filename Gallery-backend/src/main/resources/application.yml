server:
  port: 8982
  servlet:
    context-path: /api  #指定上下文路径
    session:
      cookie:
        max-age: 2592000
  #cookie 30天过期
spring:
  application:
    name: Gallery-backend  #项目名称
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/momentGallery
    username: root
    password: root
  #redis 配置
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    database: 0  #Redis数据库索引（默认为0）
    timeout: 5000
  #Session配置
  session:
    store-type: redis
     # session 30 天过期
    timeout: 2592000
  #    最大文件上传大小
  servlet:
    multipart:
      max-file-size: 2MB
  # 空间图片分表
  shardingsphere:
    datasource:
      names: momentGallery #逻辑表的名称
      MomentGallery:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/momentGallery
        username: root
        password: root
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: momentGallery.picture  # 使用动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法


        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED #基于类的自定义算法
            props:
              strategy: standard
              algorithmClassName: com.liuh.gallerybackend.mananger.sharding.PictureShardingAlgorithm
    props:
      sql-show: true

#  指定激活的配置
#  profiles:
#    active: local
mybatis-plus:
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: false  #将下划线转换为驼峰式语法 -- true(转换)
    # 仅在开发环境打印日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #标准日志
  global-config:
    db-config:
      #逻辑删除 (并未真正的删除, 仅为标记删除)
      logic-delete-field: isDeleted  # 队列名
      logic-delete-value: 1 #指定为1 表示逻辑删除了(也是默认值)
      logic-not-delete-value: 0 #指定为0 表示逻辑未删除(也是默认值)
    enable-sql-runner: true

#接口文档注释
knife4j:
  enable: true # 是否开启接口文档
  openapi:
    title: 接口文档 # 接口文档的标题
    version: v1.0 #接口文档标注的版本号
    group:
      default:
        api-rule: package #安装包扫描
        api-rule-resources: #扫描包的位置
          - com.liuh.gallerybackend.controller
